#!/bin/bash

# Copyright (C) 2021-2024 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials,
# and your use of them is governed by the express license under which they
# were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit
# this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express
# or implied warranties, other than those that are expressly stated in the License.

cd ${SSCAPEDIR}
echo Waiting for database
./manage.py waitfordb

mkdir -p ${DBROOT}/media
chown ${WSUSER} ${DBROOT}/media
chown ${WSUSER} ${SSCAPEDIR}/sscape/static/assets
chown ${WSUSER} ${SSCAPEDIR}/sscape/static/examples
chown ${WSUSER} ${SSCAPEDIR}/sscape/static/bootstrap
chmod -R u=rwX,go=rX ${SSCAPEDIR}/sscape/static/examples/ ${SSCAPEDIR}/sscape/static/assets ${SSCAPEDIR}/sscape/static/bootstrap

OPENCV_FILE="$SSCAPEDIR/sscape/static/assets/opencv.js"
if [[ -f "$OPENCV_FILE" ]]; then
  echo "Generating SHA256 for opencv.js..."
  OPENCV_SHA=$(openssl dgst -sha256 -binary "$OPENCV_FILE" | openssl base64)
  echo "Updating Apache config with new SHA..."
  sed -i "s|sha256-opencv|sha256-$OPENCV_SHA|g" /etc/apache2/sites-available/000-default.conf
else
  echo "ERROR: $OPENCV_FILE not found!"
  exit 1
fi

chmod a+rX ${DBROOT}/media
mkdir -p ${SSCAPEDIR}/media
chown www-data.www-data ${SSCAPEDIR}/media
chmod ug+rwx ${SSCAPEDIR}/media
map_dir ${DBROOT}/media ${SSCAPEDIR}/media www-data www-data
# Remove symlink and make a copy owned by www-data
rm -f ${SSCAPEDIR}/sscape/secrets.py
cp ${RUNSECRETS}/django/secrets.py ${SSCAPEDIR}/sscape/secrets.py
chown www-data.www-data ${SSCAPEDIR}/sscape/secrets.py

if [ -n "${BROKER}" ] ; then
    echo "${BROKER}" | awk '{printf "export BROKER=%s\n", $2}' >> /etc/apache2/envvars
fi
if [ -z "${BROKERAUTH}" ] ; then
    BROWSERAUTH=$(fgrep BROWSER_AUTH_FILE ${SSCAPEDIR}/sscape/settings.py \
                    | awk '{print $3}' | sed -e 's/"//g')
    # If default auth file is in /run/secrets, need to make a copy
    # that www-data can read
    if [[ "${BROWSERAUTH}" == /run/secrets/* ]] ; then
        BROKERAUTH=${BROWSERAUTH}
    fi
fi
if [ -n "${BROKERAUTH}" ] ; then
    BAUTHFILE=${WSHOME}/$(basename ${BROKERAUTH})
    cp ${BROKERAUTH} ${BAUTHFILE}
    chown www-data.www-data ${BAUTHFILE}
    echo "export BROKERAUTH=${BAUTHFILE}" >> /etc/apache2/envvars
fi

# Handle broker root cert
if [ -z "${BROKERROOTCERT}" ] ; then
    ROOTCERT=$(fgrep ROOT_CERT_FILE ${SSCAPEDIR}/sscape/settings.py \
                    | awk '{print $3}' | sed -e 's/"//g')
    # If default root cert file is in /run/secrets, need to make a copy
    # that www-data can read
    if [[ "${ROOTCERT}" == /run/secrets/* ]] ; then
        BROKERROOTCERT=${ROOTCERT}
    fi
fi
if [ -n "${BROKERROOTCERT}" ] ; then
    CERTFILE=${WSHOME}/$(basename ${BROKERROOTCERT})
    cp ${BROKERROOTCERT} ${CERTFILE}
    chown www-data.www-data ${CERTFILE}
    echo "export BROKERROOTCERT=${CERTFILE}" >> /etc/apache2/envvars
fi

# In Kubernetes, serve the /mqtt proxy on port 80 as well, to use behind reverse proxies
if [ -n "${KUBERNETES_SERVICE_HOST}" ] ; then
    sed -i '/<\/VirtualHost>/i \
    SSLProxyEngine on \
    ProxyPass /mqtt wss://broker.scenescape.intel.com:1884/ \
    ProxyPassReverse /mqtt wss://broker.scenescape.intel.com:1884/ \
    \n        WSGIPassAuthorization On' /etc/apache2/sites-available/000-default.conf
fi

# Change broker ProxyPass in default-ssl.conf to be dynamic
HOST=$(echo ${BROKER} | awk '{printf "%s\n", $2}')
HOST=${HOST:-broker.scenescape.intel.com}
if [[ ${HOST} == *":"* ]]; then
    sed -i "s/broker.scenescape.intel.com:1884/${HOST}/g" /etc/apache2/sites-available/default-ssl.conf
    sed -i "s/broker.scenescape.intel.com:1884/${HOST}/g" /etc/apache2/sites-available/000-default.conf
else
    sed -i "s/broker.scenescape.intel.com/${HOST}/g" /etc/apache2/sites-available/default-ssl.conf
    sed -i "s/broker.scenescape.intel.com/${HOST}/g" /etc/apache2/sites-available/000-default.conf
fi

echo Running interface
apache2ctl -D FOREGROUND &
WAITPID="${WAITPID} $!"
set --
